<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="com.redhat.travelagency.AggregationStrat" id="aggStrat"/>
    <bean class="com.redhat.travelagency.BRMSReqProcessor" id="brmsReqProc"/>
    <bean class="com.redhat.travelagency.BRMSRespProcessor" id="brmsRespProc"/>
    <bean class="com.redhat.travelagency.ThreeScaleCall" id="3scaleCall">
        <constructor-arg>
            <value type="java.lang.String">techoffice-admin.3scale.net</value>
        </constructor-arg>
        <constructor-arg>
            <value type="int">443</value>
        </constructor-arg>
        <constructor-arg>
            <value>${SERVICE_TOKEN}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${SERVICE_ID}</value>
        </constructor-arg>
        <constructor-arg>
            <value>${USER_KEY}</value>
        </constructor-arg>
    </bean>
    <bean
        class="org.springframework.boot.context.embedded.ServletRegistrationBean" id="camelServlet">
        <property name="name" value="CamelServlet"/>
        <property name="loadOnStartup" value="1"/>
        <property name="servlet">
            <bean
                class="org.apache.camel.component.servlet.CamelHttpTransportServlet" id="camelServlet"/>
        </property>
        <property name="urlMappings" value="/*"/>
    </bean>
    <camelContext id="context-a07d96fd-3af7-4782-a701-b5f3c1d4e1cd"
        trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="urls" location="props.properties"/>
        <restConfiguration apiContextPath="api-docs" component="servlet"
            enableCORS="true" host="0.0.0.0"/>
        <rest consumes="application/json" path="/rest">
        	<get uri="/" outType="java.lang.String">
        		<camel:route>
        			<camel:setBody><camel:constant>OK</camel:constant></camel:setBody>
        		</camel:route>
        	</get>
            <post outType="com.redhat.travelagency.model.BookingResp"
                type="com.redhat.travelagency.model.BookingReq" uri="/book">
                <to uri="direct:book"/>
            </post>
            <post outType="com.redhat.FlightResp"
                type="com.redhat.FlightReq" uri="/flight">
                <to uri="direct:flightRoute"/>
            </post>
            <post outType="com.redhat.CarResp" type="com.redhat.CarReq" uri="/car">
                <to uri="direct:carRoute"/>
            </post>
            <post outType="com.redhat.HotelResp"
                type="com.redhat.HotelReq" uri="/hotel">
                <to uri="direct:hotelRoute"/>
            </post>
            <post outType="com.redhat.travelagency.model.BookingResp"
                type="com.redhat.travelagency.model.BookingResp" uri="/discounts">
                <to uri="direct:brmsRoute"/>
            </post>
        </rest>
        <route id="bookings">
            <from id="_from1" uri="direct:book"/>
            <wireTap id="_wireTap5" uri="bean:3scaleCall?method=threeScaleAuthRep(&quot;booking&quot;)"/>
            <unmarshal id="_unmarshal1">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.travelagency.model.BookingReq"/>
            </unmarshal>
            <split id="_split1" parallelProcessing="true" strategyRef="aggStrat">
                <method
                    beanType="com.redhat.travelagency.BookingReqSplitter"
                    method="splitBody" ref="null"/>
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${body} is 'com.redhat.FlightReq'</simple>
                        <to id="_to1" uri="direct:flightRoute"/>
                    </when>
                    <when id="_when2">
                        <simple>${body} is 'com.redhat.HotelReq'</simple>
                        <to id="_to2" uri="direct:hotelRoute"/>
                    </when>
                    <when id="_when3">
                        <simple>${body} is 'com.redhat.CarReq'</simple>
                        <to id="_to3" uri="direct:carRoute"/>
                    </when>
                </choice>
            </split>
            <to id="_to4" uri="direct:brmsRoute"/>
        </route>
        <route id="flightRoute">
            <from id="_from2" uri="direct:flightRoute"/>
            <wireTap id="_wireTap1" uri="bean:3scaleCall?method=threeScaleAuthRep(&quot;book_flight&quot;)"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader1">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal1">
                <json library="Gson"/>
            </marshal>
            <to id="_to5" uri="http4://{{FlightURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal2">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.FlightResp"/>
            </unmarshal>
        </route>
        <route id="hotelRoute">
            <from id="_from3" uri="direct:hotelRoute"/>
            <wireTap id="_wireTap2" uri="bean:3scaleCall?method=threeScaleAuthRep(&quot;book_hotel&quot;)"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader2">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal2">
                <json library="Gson"/>
            </marshal>
            <to id="_to6" uri="http4://{{HotelURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal3">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.HotelResp"/>
            </unmarshal>
        </route>
        <route id="carRoute">
            <from id="_from4" uri="direct:carRoute"/>
            <wireTap id="_wireTap3" uri="bean:3scaleCall?method=threeScaleAuthRep(&quot;book_car&quot;)"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader3">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal3">
                <json library="Gson"/>
            </marshal>
            <to id="_to7" uri="http4://{{CarURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal4">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.CarResp"/>
            </unmarshal>
        </route>
        <route id="brms">
            <from id="_from5" uri="direct:brmsRoute"/>
            <wireTap id="_wireTap4" uri="bean:3scaleCall?method=threeScaleAuthRep(&quot;discount&quot;)"/>
            <setProperty id="_setProperty1" propertyName="BookingResp">
                <simple>${body}</simple>
            </setProperty>
            <process id="_process1" ref="brmsReqProc"/>
            <marshal id="_marshal4">
                <json library="Gson" prettyPrint="true"/>
            </marshal>
            <setHeader headerName="Content-Type" id="_setHeader4">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="Accept" id="_setHeader5">
                <constant>application/json</constant>
            </setHeader>
            <to id="_to8" uri="http4://{{BRMSURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true&amp;authUsername={{BRMSUser}}&amp;authPassword={{BRMSPassword}}"/>
            <process id="_process2" ref="brmsRespProc"/>
            <marshal id="_marshal5">
                <json library="Gson" prettyPrint="true"/>
            </marshal>
        </route>
    </camelContext>
</beans>
